plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
  id 'com.diffplug.spotless' version '6.11.0'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

    // jwt
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // mqtt
    implementation 'org.springframework.boot:spring-boot-starter-integration'
    implementation 'org.springframework.integration:spring-integration-mqtt'

    // QR creator
    implementation group: 'com.google.zxing', name: 'core', version: '3.5.0'
    implementation group: 'com.google.zxing', name: 'javase', version:'3.5.0'



    
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


}

spotless  {
  lineEndings "UNIX"

  java {
    importOrder()
    googleJavaFormat()
    formatAnnotations()
  }
}

bootRun {
  dependsOn("spotlessApply")

  if (file('.env').exists()) {
    file('.env').readLines().each() {
      if (!it.isEmpty() && !it.startsWith("#")) {
        def pos = it.indexOf("=")
        def key = it.substring(0, pos)
        def value = it.substring(pos + 1)

        if (System.getenv(key) == null) {
          environment key, value
        }
      }
    }
  }
}

tasks.named('test') {
	useJUnitPlatform()
}
